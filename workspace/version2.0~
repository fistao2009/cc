------------------2.0版本的改善：三重境界的第二重------------------------------------
1.C++编程技巧，指针，const,析构函数，代码的安全性，提高性能和效率，宏，内联，复制构造函数，运算符重载，
  不使用对象，尽量多使用指针和引用，参考我买的C++书上的编程技巧。
2.软件设计的技巧，符合高内聚，低耦合，使用设计模式，体会到设计模式的运用。
3.可以将通用的C++源程序转换为可正确执行的arm汇编。
4.错误处理和错误恢复。
5.代码优化算法。
6.程序的交互性更好，美观，便捷。
7.生成中间代码，进行中间代码优化。
8.扩展文法，支持更多C++特性。
9.在对编译的理解上，和编程的实现上都有大幅度提升。
10.软件设计美感，健壮性，思想的深度，高效率。
11.职责单一原则。

--------------------------------------------------------------------

2.0版：2014.7.5

--------------------------------------------------------------------
改进分两个方面：
1.C++编程方法。
2.编译领域思想。


核心思想：
---紧盯左大括号和右大括号，左大括号前进行函数头生成，右大括号后紧跟函数尾处理，中间每分析完一个完成的语法模块，紧跟本模块的代码生成，如此可好---

时间安排：
2014.6.26-2014.7.31 代码生成
2014.8.1-2014.8.31  求职复习
一、基础知识：
1.语言语法（以C/C++ 为例）。指针（数组），函数指针，操作符运算顺序，const（常指针与指向常量指针），static四大用法，字符串（字符数组），字节对齐（sizeof），位运算。秒杀书籍：《C Primer》面向对象。构造与析构顺序、多态、重载、覆盖、对象模型等。秒杀书籍：《深入理解C 对象模型》。（细节：效率，准确性）

方法：cc3.0中运用上述的C++知识来改造程序，还有其他的C++知识，改造程序的过程就是最好的复习。


2.数据结构。栈，队列，链表（双向、循环），树，堆，哈希表。基本算法。排序（最重要的是快速排序）、查找、图算法、贪心算法、动态规划。单例模式。(重点关注：模板、效率、边界值)

方法：在cc3.0中建立一个文件夹，放入测试通过常用数据结构，像linux一样。

复习编译器重点知识。

3.操作系统。进程与线程、互斥与同步、死锁、进程间通信，页表，虚存等。


方法：1.高级操作系统，查看linux内核代码。根据那个文档里编译linux内核。长文档。高级进阶。2.基本的，写程序验证。复习核高基。

4.网络基础。

5.8套笔试题。8.15号左右开始。



二、时间安排
时间安排：5+7+5+5+8=30
方法：写程序验证，即使再简单也要写程序验证，光看不顶用。写文档，最后连同笔试题一起打印出来。


选择大于努力：
1.首选银行。
2.其次一些大单位。





研三任务：
求职、驾照、论文、独立做一个大项目。
